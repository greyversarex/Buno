/**
 * –í–ê–õ–ò–î–ê–¶–ò–Ø –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —Å–µ—Ä–≤–µ—Ä–∞
 * –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –∑–∞–ø—É—Å–∫ —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏/–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º–∏ —Å–µ–∫—Ä–µ—Ç–∞–º–∏
 */

interface EnvironmentConfig {
  required: string[];
  optional: string[];
  warnings: string[];
}

const envConfig: EnvironmentConfig = {
  // ‚ùå –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–´–ï - —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –±–µ–∑ –Ω–∏—Ö
  required: [
    'DATABASE_URL',
    'JWT_SECRET'
  ],
  
  // ‚ö†Ô∏è –û–ü–¶–ò–û–ù–ê–õ–¨–ù–´–ï –ù–û –í–ê–ñ–ù–´–ï - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
  optional: [
    'ALIF_MERCHANT_KEY',
    'ALIF_MERCHANT_PASSWORD',
    'SMTP_HOST',
    'SMTP_USER',
    'SMTP_PASSWORD'
  ],
  
  // üìù –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï - –ø—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ—Ç
  warnings: [
    'STRIPE_SECRET_KEY',
    'PAYME_MERCHANT_ID',
    'CLICK_MERCHANT_ID'
  ]
};

/**
 * –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
 * –ë—Ä–æ—Å–∞–µ—Ç –æ—à–∏–±–∫—É –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
 */
export function validateRequiredEnvVars(): void {
  const missing: string[] = [];
  
  envConfig.required.forEach(varName => {
    if (!process.env[varName]) {
      missing.push(varName);
    }
  });
  
  if (missing.length > 0) {
    console.error('\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è!\n');
    console.error('–ù–µ –Ω–∞–π–¥–µ–Ω—ã:');
    missing.forEach(varName => {
      console.error(`  - ${varName}`);
    });
    console.error('\nüìù –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –∏ –¥–æ–±–∞–≤—å—Ç–µ —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ.\n');
    
    throw new Error(`Missing required environment variables: ${missing.join(', ')}`);
  }
  
  console.log('‚úÖ –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –Ω–æ –≤–∞–∂–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
 */
export function checkOptionalEnvVars(): void {
  const missing: string[] = [];
  
  envConfig.optional.forEach(varName => {
    if (!process.env[varName]) {
      missing.push(varName);
    }
  });
  
  if (missing.length > 0) {
    console.warn('\n‚ö†Ô∏è  –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:');
    missing.forEach(varName => {
      console.warn(`  - ${varName}`);
    });
    console.warn('–ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å (–ø–ª–∞—Ç–µ–∂–∏, email —Ä–∞—Å—Å—ã–ª–∫–∞).\n');
  }
}

/**
 * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
 */
export function logAdditionalEnvVars(): void {
  const configured: string[] = [];
  const missing: string[] = [];
  
  envConfig.warnings.forEach(varName => {
    if (process.env[varName]) {
      configured.push(varName);
    } else {
      missing.push(varName);
    }
  });
  
  if (configured.length > 0) {
    console.log('üì¶ –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:', configured.join(', '));
  }
  
  if (missing.length > 0) {
    console.log('üìù –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:', missing.join(', '));
  }
}

/**
 * –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π (–Ω–µ —Ç–æ–ª—å–∫–æ –Ω–∞–ª–∏—á–∏–µ)
 */
export function validateEnvValues(): void {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ JWT_SECRET –Ω–∞ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
  if (process.env.JWT_SECRET === 'default-secret-key') {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò: JWT_SECRET –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!');
    console.error('–≠—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è —É—è–∑–≤–∏–º–æ—Å—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.');
    console.error('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–ª—é—á –≤ .env —Ñ–∞–π–ª–µ.\n');
    
    throw new Error('JWT_SECRET must not use default value');
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ DATABASE_URL –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
  if (process.env.DATABASE_URL && !process.env.DATABASE_URL.startsWith('postgresql://')) {
    console.warn('\n‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: DATABASE_URL –º–æ–∂–µ—Ç –∏–º–µ—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç');
    console.warn('–û–∂–∏–¥–∞–µ—Ç—Å—è PostgreSQL connection string (postgresql://...)');
  }
  
  console.log('‚úÖ –ó–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤–∞–ª–∏–¥–Ω—ã');
}

/**
 * –ü–æ–ª–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
 */
export function validateEnvironment(): void {
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è...\n');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
    validateRequiredEnvVars();
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è
    validateEnvValues();
    
    // 3. –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ–± –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö
    checkOptionalEnvVars();
    
    // 4. –õ–æ–≥–∏—Ä—É–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ
    logAdditionalEnvVars();
    
    console.log('\n‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ\n');
  } catch (error) {
    console.error('\nüí• –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –∏–∑-–∑–∞ –ø—Ä–æ–±–ª–µ–º —Å –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º\n');
    throw error;
  }
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å fallback
 * –ù–û: –¥–ª—è –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö fallback –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
 */
export function getEnvVar(name: string, defaultValue?: string): string {
  const value = process.env[name];
  
  if (!value) {
    if (envConfig.required.includes(name)) {
      throw new Error(`Required environment variable ${name} is not set`);
    }
    
    if (defaultValue === undefined) {
      throw new Error(`Environment variable ${name} is not set and no default value provided`);
    }
    
    return defaultValue;
  }
  
  return value;
}
