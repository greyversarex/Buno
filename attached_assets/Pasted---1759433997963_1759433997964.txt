Мы меняем тактику. Нам нужно срочно обеспечить работоспособность модуля "Отели" в админ-панели. Мы отказываемся от использования `initEntityForm` и `hotelFieldsConfig` для этого модуля и переходим к прямому процедурному подходу, как это реализовано в модуле "Туры".

**Твоя задача: Полностью переписать JavaScript-логику для СОЗДАНИЯ и РЕДАКТИРОВАНИЯ Отелей, копируя рабочий паттерн из модуля "Туры".**

**АЛГОРИТМ ДЕЙСТВИЙ:**

1.  **ИЗОЛИРУЙ МОДУЛЬ "ОТЕЛИ".** Найди и удали или закомментируй любые строки, связанные с рефакторингом отелей: удали `hotelFieldsConfig` и вызов `initEntityForm({ formId: 'hotelForm', ... })`. Модуль "Отели" больше не должен использовать `admin-helpers.js`.

2.  **СОЗДАЙ ЯВНУЮ ФУНКЦИЮ `saveHotel()`.**
    *   Создай новую JavaScript-функцию `saveHotel()`.
    *   Привяжи эту функцию к событию `submit` формы отеля (`<form id="hotelForm">`).
    *   Внутри `saveHotel()` **скопируй логику из функции `saveTourForm()`** и адаптируй ее для отеля:
        *   Определи, это создание или редактирование (по наличию `hotel-id`).
        *   **Вручную**, используя `document.getElementById(...)`, собери значения из **каждого** поля формы отеля.
        *   **Вручную** сформируй JSON-объекты для многоязычных полей: `name`, `description`, `address`.
        *   **Вручную** собери данные из чекбоксов `roomTypes` и `mealTypes` в JSON-объекты с ценами (скопируй эту логику из старой, работавшей версии кода, если потребуется).
        *   **Вручную** собери массив из `amenities` (удобства).
        *   **Вручную** собери массив URL-адресов изображений из `window.hotelImageURLs`.
        *   Сформируй `fetch`-запрос (`POST` для создания, `PUT` для редактирования) и отправь все собранные данные на эндпоинт `/api/hotels`.
        *   Добавь обработку ответа: покажи сообщение об успехе/ошибке, закрой модальное окно и обнови список отелей (`loadHotels()`).

3.  **ОБНОВИ ФУНКЦИЮ `loadHotelData(hotelId)`.**
    *   Проверь, что эта функция делает `fetch`-запрос на `/api/hotels/:id`.
    *   Убедись, что после получения данных она **вручную и явно** заполняет **каждое** поле формы: `input`, `textarea`, `select`.
    *   Убедись, что она правильно обрабатывает JSON-поля (парсит их и расставляет `.ru` и `.en` значения).
    *   Убедись, что она правильно проставляет галочки и цены для `roomTypes`, `mealTypes` и `amenities`.
    *   Проверь и исправь логику каскадной загрузки для стран и городов: сначала устанавливается страна, **запускается** загрузка городов, и **только после ее завершения** устанавливается город.

**ЦЕЛЬ:** Добиться того, чтобы модуль "Отели" работал автономно, по той же прямой и понятной логике, что и модуль "Туры", без зависимости от `admin-helpers.js`. Надежность сейчас важнее элегантности.