Задача №1 (Фотографии) — Безопасный Промпт
code
Text
Привет. Нам нужно решить проблему с отображением изображений на сайте. Но прежде чем вносить изменения, мы должны действовать очень осторожно, чтобы не нарушить работающие части.

**ШАГ 1: АНАЛИЗ ВЛИЯНИЯ**

1.  **Найди все места.** Просканируй весь фронтенд-код (все HTML и JS файлы) и составь полный список мест, где динамически формируется атрибут `src` для тега `<img>`.
2.  **Опиши каждый случай.** Для каждого найденного места укажи:
    *   Файл и номер строки.
    *   Внутри какой функции это происходит.
    *   Какой формат пути к изображению используется в данный момент (например, "относительный путь вида /uploads/...", "полный URL", "результат конкатенации строк").
    *   Работает ли это сейчас корректно в данном конкретном месте.
3.  **Доложи результаты.** Предоставь мне этот список. **Не вноси никаких изменений в код, пока я не изучу твой анализ.**

**ШАГ 2: ПРЕДЛОЖЕНИЕ РЕШЕНИЯ (после моего ответа на Шаг 1)**

На основе твоего анализа я попрошу тебя предложить план по созданию и внедрению единой, безопасной функции `getAbsoluteImageUrl()`. Твой план должен будет гарантировать, что новая функция не сломает те части сайта, где отображение картинок уже работает правильно.

**ШАГ 3: РЕАЛИЗАЦИЯ (после моего одобрения)**

Ты приступишь к написанию кода только после того, как мы утвердим твой план.
Задача №2 (Форма Отеля) — Безопасный Промпт
code
Text
Привет. Мы расследуем проблему, из-за которой данные не возвращаются в форму редактирования отеля. Действуем по протоколу безопасности.

**ШАГ 1: АНАЛИЗ ВЛИЯНИЯ**

1.  **Изучи функцию `loadHotelData()`.** Найди эту функцию в `frontend/admin-dashboard.html`.
2.  **Проанализируй вызовы.** Найди все места в коде, откуда вызывается эта функция. Используется ли она только для страницы редактирования отеля, или, возможно, еще где-то?
3.  **Изучи структуру данных.** Проанализируй код контроллера `getHotel()` в `src/controllers/hotelController.ts`. Всегда ли он возвращает объект `_raw` при запросе с параметром `includeRaw=true`? Есть ли сценарии, когда этот объект может отсутствовать?
4.  **Доложи результаты.** Предоставь мне отчет по этим трем пунктам. **Не вноси никаких изменений, пока я не дам команду.**

**ШАГ 2: ПРЕДЛОЖЕНИЕ РЕШЕНИЯ**

После твоего анализа я попрошу тебя предложить модификацию для `loadHotelData()`. Главное требование к твоему предложению будет — "безопасный доступ к данным". Код должен будет сначала проверять наличие `hotel._raw`, `hotel._raw.name` и т.д., прежде чем пытаться получить из них данные. Это защитит нас от ошибок, если структура ответа от сервера вдруг окажется иной.

**ШАГ 3: РЕАЛИЗАЦИЯ**

Ты приступишь к написанию кода только после утверждения предложенного безопасного метода.
Задача №3 (Многоязычность) — Безопасный Промпт
code
Text
Привет. Нам нужно внедрить системный подход к многоязычности. Так как это большое изменение, мы будем действовать пошагово и очень осторожно.

**ШАГ 1: АНАЛИЗ И ПЛАНИРОВАНИЕ**

1.  **Оцени текущую ситуацию.** Ты уже предоставлял анализ. Подтверди, что твое предыдущее описание (про `localStorage`, `getLocalizedText`, раздельные инпуты в админке) все еще актуально.
2.  **Разработай пошаговый план внедрения.** Предложи детальный план по внедрению системы статических переводов (с файлами `ru.json`/`en.json`). План должен быть разбит на максимально мелкие и безопасные этапы. Например:
    *   Этап 1: Создание структуры папок и пустых файлов (`/public/locales/ru.json` и `en.json`).
    *   Этап 2: Создание и подключение JS-хелпера (`i18n.js`), который пока ничего не делает, а просто загружает эти файлы.
    *   Этап 3: Тестовая замена **одного-единственного, некритичного** текстового элемента на сайте (например, год в футере) на вызов новой функции перевода.
    *   Этап 4: Разработка стратегии по постепенной замене всех остальных текстов.
3.  **Доложи план.** Предоставь мне этот пошаговый план. **Мы не начинаем реализацию, пока не утвердим каждый шаг.**

**ШАГ 2 и 3: ПОЭТАПНАЯ РЕАЛИЗАЦИЯ**

Мы будем двигаться по твоему плану, шаг за шагом. Я буду давать тебе команду на реализацию каждого отдельного этапа после того, как мы убедимся, что предыдущий этап прошел успешно и ничего не сломал.