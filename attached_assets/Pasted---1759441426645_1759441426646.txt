Нам необходимо провести полный и капитальный аудит всей системы многоязычности на сайте. Прежде чем вносить какие-либо изменения, мы должны получить исчерпывающее представление о том, как система спроектирована и работает сейчас, а также каковы ее сильные и слабые стороны.

У тебя есть доступ ко всем файлам проекта. Проведи глубокий анализ и предоставь отчет, ответив на следующие вопросы:

---

### Часть 1: Анализ Текущей Реализации

**1. Механизм Переключения Языка:**
*   Как именно сайт определяет и хранит текущий язык пользователя? (Проанализируй `localStorage`, `window.currentLanguage`, `navigator.language` и любые другие используемые механизмы).
*   Какой JavaScript-код отвечает за сам процесс переключения языка, когда пользователь кликает на флаг? Где он находится?
*   Какие события происходят после смены языка? (Например, `document.dispatchEvent(new CustomEvent('languageChanged', ...))`). Какие части сайта "слушают" это событие и как на него реагируют?

**2. Система Статических Переводов (Интерфейс):**
*   Проанализируй файл `frontend/public/js/i18n.js`. Какова его структура? Насколько полон словарь `window.translations`?
*   Как именно происходит замена текста на странице? Используются ли атрибуты `data-translate` или какой-то другой механизм? Насколько последовательно он применяется на всех страницах?
*   **Оценка:** Насколько хорошо текущая система справляется с переводом всего статического контента (кнопки, заголовки, метки форм) на всех публичных страницах и в админ-панели? Есть ли "непереведенные" участки?

**3. Система Динамических Переводов (Данные из БД):**
*   Как реализована работа с `Json`-полями в базе данных (`{ "ru": "...", "en": "..." }`)?
*   Проанализируй админ-панель (`admin-dashboard.html`). Насколько последовательно для всех модулей (Туры, Отели, Гиды и т.д.) используется паттерн с двумя полями ввода (`...Ru` и `...En`) для многоязычных данных? Есть ли модули, где это сделано иначе или не сделано вообще?
*   Проанализируй публичные страницы (`tour-template.html`, `hotel-template.html` и т.д.). Насколько последовательно используется функция `getLocalizedText` (или аналогичная) для извлечения правильного перевода из полученных с сервера данных? Справляется ли сайт с отображением английского контента, когда язык переключен на `en`? Есть ли места, где всегда отображается только русский текст, несмотря на переключение?

**4. Общая Оценка и "Разрывы":**
*   Оцени общую "связность" системы. Насколько хорошо статический и динамический перевод работают вместе?
*   Существуют ли "разрывы" в логике, где переключение языка работает для одной части страницы (например, меню), но не работает для другой (например, для контента, загруженного с сервера)? Если да, то почему?

---

### Часть 2: Предложение по Улучшению

На основе твоего полного анализа из Части 1, предложи **твое видение идеальной, унифицированной системы многоязычности** для этого проекта.

**Твое предложение должно включать:**

1.  **Рекомендации по Статическому Контенту:** Стоит ли оставлять все переводы в одном `i18n.js` или лучше перейти на внешние файлы (`ru.json`, `en.json`)? Обоснуй свое решение. Предложи архитектуру "движка" перевода.

2.  **Рекомендации по Динамическому Контенту:** Как унифицировать работу с многоязычными полями в админ-панели, чтобы все модули работали по единому стандарту? Предложи, как можно улучшить отображение этих данных на публичных страницах.