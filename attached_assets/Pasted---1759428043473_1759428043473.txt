 Мы готовы к глобальному рефакторингу админ-панели. Наша цель — создать Единый Стандарт Обработки Данных и применить его к модулям "Туры", "Отели" и "Гиды", улучшив при этом сам стандарт.

Модуль "Туры" мы считаем лучшей отправной точкой, но признаем, что он тоже требует доработки.

Твоя задача состоит из трех этапов:

---

### Этап 1: Глубокий сравнительный анализ

Проведи детальный анализ и сравнение JavaScript-логики для модулей "Туры", "Отели" и "Гиды" в `frontend/admin-dashboard.html`. Твоя цель — не просто найти отличия, а выявить **лучшие работающие практики** из модуля "Туры" и **недостатки/ошибки** во всех трех модулях.

Особое внимание удели:
*   Загрузке данных в формы для редактирования (включая связанные сущности типа стран/городов).
*   Сбору данных из форм для сохранения (включая корректное формирование JSON для многоязычных полей и массивов).

Представь результат в виде структурированного отчета.

---

### Этап 2: Проектирование Единого Стандарта

На основе твоего анализа из Этапа 1, спроектируй и опиши **"Идеальный Единый Стандарт"** для обработки данных в админ-панели.

Этот стандарт должен включать в себя **набор общих, переиспользуемых JavaScript helper-функций**, которые решат следующие задачи:
1.  `initEntityForm(config)`: Главная функция, которая инициализирует форму (навешивает обработчики, загружает справочники).
2.  `loadEntityData(entityType, entityId)`: Функция для загрузки данных (тура, отеля или гида) и их корректного распределения по всем полям формы.
3.  `saveEntityData(entityType, entityId)`: Функция для сбора данных из всех полей и отправки их на сервер.
4.  `createMultilingualObject(baseId)`: Helper для сбора данных из полей `...Ru` и `...En` в JSON-объект.
5.  `setupCountryCityDropdowns(config)`: Helper для настройки каскадных выпадающих списков стран и городов.
6.  `handleCheckboxGroup(groupName)`: Helper для работы с группами чекбоксов (например, "Удобства" в отелях).
7.  ... и другие функции, которые ты сочтешь необходимыми для устранения дублирования кода.

Опиши сигнатуру и логику работы каждой из этих функций.

---

### Этап 3: Создание пошагового плана рефакторинга

На основе спроектированного "Единого Стандарта", создай подробный пошаговый план по рефакторингу **всех трех модулей** (`Tours`, `Hotels`, `Guides`).

План должен выглядеть примерно так:
1.  Создать новый файл `frontend/public/js/admin-helpers.js` и реализовать в нем все спроектированные helper-функции из Этапа 2.
2.  Подключить этот скрипт в `admin-dashboard.html`.
3.  **Рефакторинг модуля "Отели":**
    *   Удалить старый код из `loadHotelData()` и `saveHotel()`.
    *   Переписать их логику, используя новые helper-функции (например, `loadEntityData('hotel', hotelId)`).
4.  **Рефакторинг модуля "Гиды":**
    *   Проделать то же самое для `loadGuideData()` и `saveGuideData()`.
5.  **Рефакторинг модуля "Туры":**
    *   Проделать то же самое для `loadTourData()` и `saveTour()`, чтобы даже наш "золотой стандарт" стал чище и использовал общие функции.